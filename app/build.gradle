apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.wisn.skin"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getGitVersion()
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            storeFile file(RELEASE_STOREFILE)
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            storePassword RELEASE_STOREPASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    /* flavorDimensions 'product', 'version'
    productFlavors {
        aa {
            dimension 'product'
//            applicationIdSuffix
        }
        bb {
            dimension 'product'
        }
        pro_release {
            dimension 'version'
        }
        pro_debug {
            dimension 'version'
        }

    }*/
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def buildType = variant.buildType.name
            def outputFile = output.outputFile
            def date = releaseTime()
            def applicationId = defaultConfig.applicationId
            def versionName = defaultConfig.versionName
            def versionCode = defaultConfig.versionCode
            if (outputFile != null && buildType.contains("release") && outputFile.name.endsWith('.apk')) {
                def fileName = "theme-${applicationId}-${variant.flavorName}-${versionCode}-${versionName}-${date}.skin"
//                output.outputFile = new File(outputFile.parent, fileName)
//                output.outputFile = new File("$rootDir/apkFile", fileName)  //3.0之前的
                output.outputFile.parent.replace(outputFile.parent,"$rootDir/apkFile")
//                output.outputFile.name.fileName
            }
        }
    }
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd--hh-mm-ss", TimeZone.getTimeZone("Asia/Shanghai"))
}

def getGitVersion() {
//    return 'git rev-parse --short HEAD'.execute().text.trim()
    return 'git rev-list HEAD --count'.execute().text.trim().toInteger()
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation project(':skinlib')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
}
