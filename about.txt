

原生加载zip皮肤
RN调用资源
并提供方法，通过资源名返回路径

RN促发发换肤—>原生换肤—>发送消息给RN—>原生重新获取对应皮肤所在资源的路径



Android皮肤包的技术方案选择 ：
zip皮肤包加载
	弊端：
	1.加载每个图片的时候通过路径或URI去加载，
	2.要对图片根据dpi通过BitmapFactory.Options做缩放和加载不同资源文件的处理，加载方式繁琐，在加载图片的时候要使用特殊的工具类
	3.在加载大量图片的时候，如果处理不好，会照成ORM
	4.适应不同density的屏幕要做加载不同目录的文件，增加了加载逻辑和降低加载效率
	5.对于颜色值，android提供了加载方式和规则，如果通过zip要解析xml或其他资源到内存中，需要优化
	优点：
	1.皮肤包无须通过android打包，压缩文件即可

android皮肤包可兼容RN的文件格式
	弊端：
	1.皮肤包需要通过android打包
	优点：
	1.android原生对资源加载方式是通过resource.arsc文件加载资源id的方式，加载的优化，argb颜色值已经转成int
	2.加载资源目录中的图片都有缩放和加载的调优，对资源的缩放交给android去处理，提供了很多的获取资源的方法
	3.对于颜色值，android提供了加载方式和规则


最终建议使用android原生+RN的换肤方案：android皮肤包可兼容RN的文件格式
皮肤包的生成：新建一个app 保持res目录和原app目录结构相同，添加要替换的皮肤内容，文件名保持一致，正常打包，无需加固
皮肤包原生使用：通过SkinManager.getInstance().loadSkin(),动态指定本地皮肤包地址，其他的开发中无须关注主题切换，会自动切换
皮肤包RN使用：通过加载本地的ReactContextBaseJavaModule的方式 传入图片名获取图片地址  传入color主题名称获取#argb值
网络皮肤包使用：通过在线下载到本地，SkinManager.getInstance().loadSkin()指定本地地址，可以动态切换原生和RN的资源
